{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","map","_","index","col","row","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","ack","findIndex","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.656455cd.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n    Array.from(Array(STAGE_HEIGHT), () =>\r\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n    )\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n    for (let y = 0; y < player.tetromino.length; y += 1) {\r\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n\r\n            // check if on tetromino cell\r\n            if (player.tetromino[y][x] !== 0) {\r\n               \r\n                if (\r\n                // check if inside game area height (y)\r\n                !stage[y + player.pos.y + moveY] ||\r\n                \r\n                // check if inside game area weight (x)\r\n                !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n                \r\n                // check if cell being moved to isn't set to clear\r\n                stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}    ","import styled from 'styled-components';\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh; \r\n    background: url(${bgImage}) #000;\r\n    background-size: cover;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width: 100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n    }\r\n`","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0' },\r\n    I: {\r\n        shape: [\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0]\r\n               ],\r\n        color: '80, 227, 230',\r\n    },\r\n    J: {\r\n        shape: [\r\n                [0, 'J', 0],\r\n                [0, 'J', 0],\r\n                ['J', 'J', 0],\r\n               ],\r\n        color: '36, 95, 223',\r\n    },\r\n    L: {\r\n        shape: [\r\n                [0, 'L', 0],\r\n                [0, 'L', 0],\r\n                [0, 'L', 'L']\r\n               ],\r\n        color: '223, 173, 36',\r\n    },\r\n    O: {\r\n        shape: [\r\n                ['O', 'O'],\r\n                ['O', 'O']\r\n               ],\r\n        color: '223, 217, 36',\r\n    },\r\n    S: {\r\n        shape: [\r\n                [0, 'S', 'S'],\r\n                ['S', 'S', 0],\r\n                [0, 0, 0]\r\n               ],\r\n        color: '48, 211, 56',\r\n    },\r\n    T: {\r\n        shape: [\r\n                [0, 0, 0],\r\n                ['T', 'T', 'T'],\r\n                [0, 'T', 0]\r\n               ],\r\n        color: '132, 61, 198',\r\n    },\r\n    Z: {\r\n        shape: [\r\n                ['Z', 'Z', 0],\r\n                [0, 'Z', 'Z'],\r\n                [0, 0, 0]\r\n               ],\r\n        color: '227, 78, 78',\r\n    },\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n    const [player, setPlayer] = useState({\r\n        pos: { x: 0, y: 0}, \r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false,\r\n});\r\n\r\n    const rotate = (matrix, dir) => {\r\n        // rows to cols (transpose)\r\n        const rotatedTetro = matrix.map((_, index) =>\r\n        matrix.map(col => col[index]),\r\n        );\r\n        // reverse row to get rotated matrix\r\n        if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n        return rotatedTetro.reverse();\r\n    };\r\n\r\n    const playerRotate = (stage, dir) => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n        const pos = clonedPlayer.pos.x;\r\n        let offset = 1;\r\n        while(checkCollision(clonedPlayer, stage, {x: 0, y: 0 })) {\r\n            clonedPlayer.pos.x += offset;\r\n            offset = -(offset + (offset > 0 ? 1 : -1));\r\n            if (offset > clonedPlayer.tetromino[0].length) {\r\n                rotate(clonedPlayer.tetromino, -dir);\r\n                clonedPlayer.pos.x = pos;\r\n                return;\r\n            }\r\n        };\r\n\r\n        setPlayer(clonedPlayer);\r\n    };\r\n\r\n    const updatePlayerPos = ({ x, y, collided }) => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n            collided,\r\n        }))\r\n    };\r\n\r\n    const resetPlayer = useCallback(() => {\r\n        setPlayer({\r\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n            tetromino: randomTetromino().shape,\r\n            collided: false,\r\n        })\r\n    }, []);\r\n\r\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage());\r\n    const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0);\r\n\r\n        const sweepRows = newStage =>\r\n            newStage.reduce((ack, row) => {\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1);\r\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n                    return ack;\r\n                }\r\n                ack.push(row);\r\n                return ack;\r\n            }, []);\r\n\r\n        const updateStage = prevStage => {\r\n            // First clear the stage\r\n            const newStage = prevStage.map(row =>\r\n                    row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n                );\r\n\r\n                // Then draw the tetromino\r\n                player.tetromino.forEach((row, y) => {\r\n                    row.forEach((value, x) => {\r\n                        if (value !== 0) {\r\n                            newStage[y + player.pos.y][x + player.pos.x] = [\r\n                                value,\r\n                                `${player.collided ? 'merged' : 'clear'}`,\r\n                            ];            \r\n                        }\r\n                    });\r\n                });\r\n                // check for collision   \r\n                if (player.collided) {\r\n                    resetPlayer();\r\n                    return sweepRows(newStage);\r\n                }\r\n            return newStage;    \r\n        };\r\n\r\n        setStage(prev => updateStage(prev))\r\n    }, [player, resetPlayer]);\r\n\r\n    return [stage, setStage, rowsCleared];\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw / ${props => props.width})\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 1fr);\r\n    grid-gap: 1px;\r\n    border: 2px solid #333;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n    width: auto;\r\n    background: rgba(${props => props.color}, 0.8);\r\n    border: ${props => (props.type === 0? '0px' : '4px solid')};\r\n    border-bottom-color: rgba(${props => props.color}, 0.1);\r\n    border-right-color: rgba(${props => props.color}, 1);\r\n    border-top-color: rgba(${props => props.color}, 1);\r\n    border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color} />\r\n)\r\n\r\nexport default React.memo(Cell);","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map (row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n)\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border: 2px solid #333;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => (props.gameOver ? 'red' : '#999')};\r\n    background: #000;\r\n    font-family: monospace;\r\n    text-transform: uppercase;\r\n    font-size: 1.2rem;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: none;\r\n    color: white; \r\n    background: #333;\r\n    font-family: monospace;\r\n    text-transform: uppercase;\r\n    font-size: 1.4rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n`","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n)\r\n\r\nexport default StartButton;","import React, { useState } from 'react';\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\n \r\n// Styled components \r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\n    const Tetris = () => {\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n    console.log('re-render');\r\n\r\n    const movePlayer = dir => {\r\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n            updatePlayerPos({ x: dir, y: 0 });\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        // Reset everything\r\n        setStage(createStage());\r\n        setDropTime(1000);\r\n        resetPlayer();\r\n        setGameOver(false);\r\n        setScore(0);\r\n        setRows(0);\r\n        setLevel(0);\r\n    };\r\n\r\n    const drop = () => {\r\n        // Increase level after 10 rows cleared\r\n        if (rows > (level + 1) * 10) {\r\n            setLevel(prev => prev + 1);\r\n            // and increase speed\r\n            setDropTime(1000 / (level + 1) + 200);\r\n        }\r\n\r\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n            updatePlayerPos({ x: 0, y: 1, collided: false })\r\n        } else {\r\n            // game over\r\n            if (player.pos.y < 1) {\r\n                console.log(\"Game over!\")\r\n                setGameOver(true);\r\n                setDropTime(null);\r\n            }\r\n            updatePlayerPos({ x: 0, y: 0, collided: true});\r\n        }\r\n        \r\n    };\r\n\r\n    const keyUp = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 40) {\r\n                console.log(\"interval on\")\r\n                setDropTime(1000 / (level + 1) + 200);\r\n            }\r\n        }\r\n    };\r\n\r\n    const dropPlayer = () => {\r\n        console.log(\"interval off\")\r\n        setDropTime(null);\r\n        drop();\r\n    };\r\n\r\n    const move = ({ keyCode }) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 37) {\r\n                movePlayer(-1);\r\n            } else if (keyCode === 39) {\r\n                movePlayer(1);\r\n            } else if (keyCode === 40) {\r\n                dropPlayer();\r\n            } else if (keyCode === 38) {\r\n                playerRotate(stage, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop();\r\n    }, dropTime);\r\n\r\n    return (\r\n        <StyledTetrisWrapper \r\n            role=\"button\" \r\n            tabIndex=\"0\" \r\n            onKeyDown={e => move(e)} \r\n            onKeyUp={keyUp}\r\n        >\r\n            <StyledTetris>\r\n                <Stage stage={stage} />\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display gameOver={gameOver} text=\"Game Over\" />\r\n                    ) : (\r\n                    <div>\r\n                        <Display text={`Score: ${score}`} />\r\n                        <Display text={`Rows: ${rows}`} />\r\n                        <Display text={`Level: ${level}`} />\r\n                    </div>\r\n                    )}\r\n                    <StartButton callback={startGame} />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    );\r\n};\r\n\r\nexport default Tetris;","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        // check if scored\r\n        if (rowsCleared > 0) {\r\n            // calculate score\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    }, [level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score]);\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel];\r\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}